name: Daten abrufen und speichern

on:
  schedule:
    - cron: '*/5 * * * *'  # Läuft alle 5 Minuten
    - cron: '5 0 * * *'        # Läuft täglich um 00:05 Uhr
  workflow_dispatch:           # Ermöglicht manuelles Starten

jobs:
  fetch-and-save:
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 * * * *'  # Nur für stündliche Ausführung

    steps:
    - name: Repository auschecken
      uses: actions/checkout@v3

    - name: Python einrichten
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Abhängigkeiten installieren
      run: pip install -r requirements.txt

    - name: Skript ausführen
      run: python fetch_data.py

    - name: Änderungen committen und pushen
      run: |
        git config --local user.name "github-actions[bot]"
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git add data/*.csv
        timestamp=$(date -u "+%Y-%m-%d %H:%M:%S")
        git commit -m "Automatische Datenerfassung am $timestamp" || echo "Keine Änderungen zum Committen"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  combine-files:
    runs-on: ubuntu-latest
    if: github.event.schedule == '5 0 * * *'  # Nur für tägliche Ausführung

    steps:
    - name: Repository auschecken
      uses: actions/checkout@v3

    - name: Python einrichten
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Abhängigkeiten installieren
      run: pip install -r requirements.txt

    - name: CSV-Dateien zusammenfassen
      run: python combine_csv.py

    - name: Änderungen committen und pushen
      run: |
        git config --local user.name "github-actions[bot]"
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git add daily_data/*.csv
        timestamp=$(date -u "+%Y-%m-%d %H:%M:%S")
        git commit -m "Zusammenfassung der Daten am $timestamp" || echo "Keine Änderungen zum Committen"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
